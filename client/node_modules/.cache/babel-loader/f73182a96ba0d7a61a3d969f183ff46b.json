{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log('error occured ', err);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log('error occured ', err);\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(reduxThunk));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["C:/Users/Caurv/Documents/capstone/BookStore/BookStore/client/src/store.js"],"names":["createStore","applyMiddleware","reduxThunk","rootReducer","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","err","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAI;AACA,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AAEH,GAJD,CAIE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACH;AACJ;;AAED,SAASG,oBAAT,GAAgC;AAC5B,MAAI;AACA,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AAEH,GALD,CAKE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACH;AACJ;;AAED,MAAMO,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,KAAK,GAAGnB,WAAW,CAACG,WAAD,EAAce,cAAd,EAA8BjB,eAAe,CAACC,UAAD,CAA7C,CAAzB;AAEAiB,KAAK,CAACC,SAAN,CAAgB,MAAMhB,kBAAkB,CAACe,KAAK,CAACE,QAAN,EAAD,CAAxC;AAEA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n\n    } catch (err) {\n        console.log('error occured ', err)\n    }\n}\n\nfunction loadFromLocalStorage() {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) return undefined;\n        return JSON.parse(serializedState);\n\n    } catch (err) {\n        console.log('error occured ', err)\n    }\n}\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(rootReducer, persistedState, applyMiddleware(reduxThunk));\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}