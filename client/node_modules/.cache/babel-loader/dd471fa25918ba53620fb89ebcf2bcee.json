{"ast":null,"code":"import { AUTH_SIGN_UP, AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR } from '../actions/types';\nconst initialState = {\n  isAuth: false,\n  jwtToken: '',\n  errorMsg: '',\n  accessTokenG: ''\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTH_SIGN_UP:\n      return { ...state,\n        isAuth: true,\n        jwtToken: action.payload.jwtToken,\n        accessTokenG: action.payload.accessToken,\n        errorMsg: ''\n      };\n\n    case AUTH_SIGN_IN:\n      return { ...state,\n        isAuth: true,\n        errorMsg: ''\n      };\n\n    case AUTH_SIGN_OUT:\n      return { ...state,\n        isAuth: false,\n        jwtToken: '',\n        accessTokenG: '',\n        errorMsg: ''\n      };\n\n    case AUTH_ERROR:\n      return { ...state,\n        isAuth: false,\n        jwtToken: '',\n        errorMsg: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Caurv/Documents/capstone/Capstone_Sprint4_Deliverables/BookStore/BookStore/client/src/reducers/authReducer.js"],"names":["AUTH_SIGN_UP","AUTH_SIGN_IN","AUTH_SIGN_OUT","AUTH_ERROR","initialState","isAuth","jwtToken","errorMsg","accessTokenG","authReducer","state","action","type","payload","accessToken"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,EAAoDC,UAApD,QAAsE,kBAAtE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,MAAM,EAAE,IAFL;AAGHC,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAHtB;AAIHE,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeC,WAJ1B;AAKHP,QAAAA,QAAQ,EAAE;AALP,OAAP;;AAOJ,SAAKN,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,MAAM,EAAE,IAFL;AAGHE,QAAAA,QAAQ,EAAE;AAHP,OAAP;;AAKJ,SAAKL,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,MAAM,EAAE,KAFL;AAGHC,QAAAA,QAAQ,EAAE,EAHP;AAIHE,QAAAA,YAAY,EAAE,EAJX;AAKHD,QAAAA,QAAQ,EAAE;AALP,OAAP;;AAOJ,SAAKJ,UAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHL,QAAAA,MAAM,EAAE,KAFL;AAGHC,QAAAA,QAAQ,EAAE,EAHP;AAIHC,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAJd,OAAP;;AAOJ;AACI,aAAO,EACH,GAAGH;AADA,OAAP;AAhCR;AAoCH,CArCD;;AAuCA,eAAeD,WAAf","sourcesContent":["import { AUTH_SIGN_UP, AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR } from '../actions/types';\n\nconst initialState = {\n    isAuth: false,\n    jwtToken: '',\n    errorMsg: '',\n    accessTokenG: ''\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH_SIGN_UP:\n            return {\n                ...state,\n                isAuth: true,\n                jwtToken: action.payload.jwtToken,\n                accessTokenG: action.payload.accessToken,\n                errorMsg: ''\n            }\n        case AUTH_SIGN_IN:\n            return {\n                ...state,\n                isAuth: true,\n                errorMsg: ''\n            }\n        case AUTH_SIGN_OUT:\n            return {\n                ...state,\n                isAuth: false,\n                jwtToken: '',\n                accessTokenG: '',\n                errorMsg: ''\n            }\n        case AUTH_ERROR:\n            return {\n                ...state,\n                isAuth: false,\n                jwtToken: '',\n                errorMsg: action.payload\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}