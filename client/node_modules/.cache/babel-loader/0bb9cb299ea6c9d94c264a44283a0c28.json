{"ast":null,"code":"import { ADD_TO_CART, INCREMENT_QUANTITY, DECREMENT_QUANTITY, REMOVE_FROM_CART, EMPTY_CART } from '../actions/types';\nconst CART_STATE = {\n  items: [],\n  subTotal: 0,\n  total: 0,\n  shipping: 99\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CART_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      let newItem = {};\n      const alreadyExist = state.items.find(item => item.book.id === action.payload.id);\n\n      if (alreadyExist) {\n        newItem = alreadyExist;\n        newItem.quantity += 1;\n        return { ...state,\n          subTotal: state.subTotal + newItem.book.price,\n          total: state.total + newItem.book.price\n        };\n      } else {\n        newItem.book = action.payload;\n        newItem.quantity = 1;\n        return { ...state,\n          items: [...state.items, newItem],\n          subTotal: state.subTotal + newItem.book.price,\n          total: state.total + newItem.book.price + (state.total > 0 ? 0 : state.shipping)\n        };\n      }\n\n    case INCREMENT_QUANTITY:\n      let book = state.items.find(item => item.book.id === Number(action.payload));\n\n      if (book) {\n        let newItem = {};\n        newItem = book;\n        newItem.quantity += 1;\n        return { ...state,\n          subTotal: state.subTotal + newItem.book.price,\n          total: state.total + newItem.book.price\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case DECREMENT_QUANTITY:\n      let bookToDelete = state.items.find(item => item.book.id === Number(action.payload));\n\n      if (bookToDelete) {\n        let newItem = {};\n        newItem = bookToDelete;\n        newItem.quantity -= 1;\n        return { ...state,\n          subTotal: state.subTotal - newItem.book.price,\n          total: state.total - newItem.book.price\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case REMOVE_FROM_CART:\n      const bookTORemove = state.items.find(item => item.book.id === Number(action.payload));\n      const updatedItems = state.items.filter(item => item.book.id !== Number(action.payload));\n      const removeShppingCharge = state.total - bookTORemove.book.price * bookTORemove.quantity - state.shipping;\n      return { ...state,\n        items: updatedItems,\n        subTotal: state.subTotal - bookTORemove.book.price * bookTORemove.quantity,\n        total: state.total - bookTORemove.book.price * bookTORemove.quantity - (removeShppingCharge > 0 ? 0 : state.shipping)\n      };\n\n    case EMPTY_CART:\n      return { ...state,\n        items: [],\n        subTotal: 0,\n        total: 0\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["C:/Users/Caurv/Documents/capstone/Capstone_Sprint4_Deliverables/BookStore/BookStore/client/src/reducers/cartReducer.js"],"names":["ADD_TO_CART","INCREMENT_QUANTITY","DECREMENT_QUANTITY","REMOVE_FROM_CART","EMPTY_CART","CART_STATE","items","subTotal","total","shipping","state","action","type","newItem","alreadyExist","find","item","book","id","payload","quantity","price","Number","bookToDelete","bookTORemove","updatedItems","filter","removeShppingCharge"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, INCREMENT_QUANTITY, DECREMENT_QUANTITY, REMOVE_FROM_CART, EMPTY_CART } from '../actions/types';\n\nconst CART_STATE = {\n    items: [],\n    subTotal: 0,\n    total: 0,\n    shipping: 99\n}\n\nexport default (state = CART_STATE, action) => {\n\n    switch (action.type) {\n\n        case ADD_TO_CART:\n\n            let newItem = {};\n            const alreadyExist = state.items.find((item) => item.book.id === action.payload.id);\n\n            if (alreadyExist) {\n                newItem = alreadyExist;\n                newItem.quantity += 1;\n                return {\n                    ...state,\n                    subTotal: state.subTotal + newItem.book.price,\n                    total: state.total + newItem.book.price\n                }\n            } else {\n                newItem.book = action.payload;\n                newItem.quantity = 1;\n                return {\n                    ...state,\n                    items: [...state.items, newItem],\n                    subTotal: state.subTotal + newItem.book.price,\n                    total: state.total + newItem.book.price + (state.total > 0 ? 0 : state.shipping)\n                }\n            }\n\n\n\n        case INCREMENT_QUANTITY:\n\n            let book = state.items.find((item) => item.book.id === Number(action.payload));\n            if (book) {\n                let newItem = {};\n                newItem = book;\n                newItem.quantity += 1;\n                return {\n                    ...state,\n                    subTotal: state.subTotal + newItem.book.price,\n                    total: state.total + newItem.book.price\n                }\n            } else {\n                return {\n                    ...state\n                }\n            }\n\n\n\n        case DECREMENT_QUANTITY:\n\n            let bookToDelete = state.items.find((item) => item.book.id === Number(action.payload));\n            if (bookToDelete) {\n                let newItem = {};\n                newItem = bookToDelete;\n                newItem.quantity -= 1;\n                return {\n                    ...state,\n                    subTotal: state.subTotal - newItem.book.price,\n                    total: state.total - newItem.book.price\n                }\n            } else {\n                return {\n                    ...state\n                }\n            }\n\n\n\n        case REMOVE_FROM_CART:\n            const bookTORemove = state.items.find((item) => item.book.id === Number(action.payload))\n            const updatedItems = state.items.filter((item) => item.book.id !== Number(action.payload))\n            const removeShppingCharge = state.total - (bookTORemove.book.price * bookTORemove.quantity) - state.shipping;\n            return {\n                ...state,\n                items: updatedItems,\n                subTotal: state.subTotal - (bookTORemove.book.price * bookTORemove.quantity),\n                total: state.total - (bookTORemove.book.price * bookTORemove.quantity) - (removeShppingCharge > 0 ? 0 : state.shipping)\n            }\n\n\n        case EMPTY_CART:\n            return {\n                ...state,\n                items: [],\n                subTotal: 0,\n                total: 0,\n            }\n\n\n        default:\n            return {\n                ...state\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}